{"ast":null,"code":"import _asyncToGenerator from \"/Users/kirian/Documents/GitHub/polygogo_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { User } from 'src/app/login/user';\nimport { Game } from '../game';\nimport { PlayerDetails } from '../PlayerDetails';\nimport { DialogComponent } from './dialog/dialog.component';\nlet BoardComponent = class BoardComponent {\n  constructor(router, cookieService, gameService, dialog) {\n    this.router = router;\n    this.cookieService = cookieService;\n    this.gameService = gameService;\n    this.dialog = dialog;\n    this.properties = [];\n    this.game = new Game();\n    this.user = new User();\n    this.playerDetails = new PlayerDetails();\n  }\n\n  ngOnInit() {\n    this.gameService.getProperties().subscribe(response => {\n      this.properties = response.sort((a, b) => a.id > b.id ? 1 : -1);\n    });\n    this.game = this.gameService.game;\n\n    if (!this.cookieService.get('username')) {\n      this.router.navigate(['/login']);\n    } else {\n      this.user.username = this.cookieService.get('username');\n      this.user.password = this.cookieService.get('password');\n      this.gameService.checkIfPlayerInGame(this.user).subscribe(response => {\n        if (response) {\n          this.gameService.game = response;\n          this.game = this.gameService.game;\n          this.mostrarDatosPartida();\n        } else {\n          this.router.navigate(['/lobby']);\n        }\n      });\n    }\n  }\n\n  mostrarDatosPartida() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.gameService.findById(_this.game).subscribe( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (response) {\n          _this.game = response;\n          _this.game.players_details = _this.game.players_details.sort((a, b) => a.player_number > b.player_number ? 1 : -1);\n\n          _this.game.players_details.forEach(player => {\n            if (player.user_id == _this.user.username) {\n              _this.playerDetails = player;\n            }\n\n            console.log(_this.playerDetails.turn);\n\n            if (player.turn) {\n              let turno = document.getElementById('turno');\n              turno.innerHTML = \"Turno de \" + player.user_id;\n            }\n          });\n\n          console.log(\"delay\");\n\n          _this.mostrarPosiciones();\n\n          yield _this.delay(1000);\n\n          _this.mostrarDatosPartida();\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n\n  mostrarPosiciones() {\n    for (let i = 0; i <= 27; i++) {\n      let box = document.getElementById('ficha' + i);\n      box.innerHTML = \"\";\n    }\n\n    this.game.players_details.forEach(player_details => {\n      let box = document.getElementById('ficha' + player_details.position);\n      box.innerHTML += '<div id=\"token' + player_details.player_number + '\"></div>';\n    });\n  }\n\n  tirarDados() {\n    this.playerDetails.turn = false;\n    let dados = document.getElementById('dado');\n    dados.style.display = \"inline\";\n    this.gameService.movePlayer(this.playerDetails).subscribe(response => {\n      dados.innerHTML = \"\";\n      this.openDialog(response);\n    });\n  }\n\n  openDialog(property) {\n    this.dialog.open(DialogComponent, {\n      data: {\n        property: property,\n        playerDetails: this.playerDetails\n      },\n      width: '60%',\n      height: '80%'\n    });\n  }\n\n  delay(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n};\nBoardComponent = __decorate([Component({\n  selector: 'app-board',\n  templateUrl: './board.component.html',\n  styleUrls: ['./board.component.sass', './box.component.sass'],\n  encapsulation: ViewEncapsulation.None\n})], BoardComponent);\nexport { BoardComponent };","map":{"version":3,"sources":["/Users/kirian/Documents/GitHub/polygogo_front/src/app/game/board/board.component.ts"],"names":["__decorate","Component","ViewEncapsulation","User","Game","PlayerDetails","DialogComponent","BoardComponent","constructor","router","cookieService","gameService","dialog","properties","game","user","playerDetails","ngOnInit","getProperties","subscribe","response","sort","a","b","id","get","navigate","username","password","checkIfPlayerInGame","mostrarDatosPartida","findById","players_details","player_number","forEach","player","user_id","console","log","turn","turno","document","getElementById","innerHTML","mostrarPosiciones","delay","i","box","player_details","position","tirarDados","dados","style","display","movePlayer","openDialog","property","open","data","width","height","ms","Promise","resolve","setTimeout","selector","templateUrl","styleUrls","encapsulation","None"],"mappings":"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","sourcesContent":["import { __decorate } from \"tslib\";\nimport { Component, ViewEncapsulation } from '@angular/core';\nimport { User } from 'src/app/login/user';\nimport { Game } from '../game';\nimport { PlayerDetails } from '../PlayerDetails';\nimport { DialogComponent } from './dialog/dialog.component';\nlet BoardComponent = class BoardComponent {\n    constructor(router, cookieService, gameService, dialog) {\n        this.router = router;\n        this.cookieService = cookieService;\n        this.gameService = gameService;\n        this.dialog = dialog;\n        this.properties = [];\n        this.game = new Game();\n        this.user = new User();\n        this.playerDetails = new PlayerDetails();\n    }\n    ngOnInit() {\n        this.gameService.getProperties().subscribe(response => { this.properties = response.sort((a, b) => (a.id > b.id) ? 1 : -1); });\n        this.game = this.gameService.game;\n        if (!this.cookieService.get('username')) {\n            this.router.navigate(['/login']);\n        }\n        else {\n            this.user.username = this.cookieService.get('username');\n            this.user.password = this.cookieService.get('password');\n            this.gameService.checkIfPlayerInGame(this.user).subscribe(response => {\n                if (response) {\n                    this.gameService.game = response;\n                    this.game = this.gameService.game;\n                    this.mostrarDatosPartida();\n                }\n                else {\n                    this.router.navigate(['/lobby']);\n                }\n            });\n        }\n    }\n    async mostrarDatosPartida() {\n        this.gameService.findById(this.game).subscribe(async (response) => {\n            this.game = response;\n            this.game.players_details = this.game.players_details.sort((a, b) => (a.player_number > b.player_number) ? 1 : -1);\n            this.game.players_details.forEach(player => {\n                if (player.user_id == this.user.username) {\n                    this.playerDetails = player;\n                }\n                console.log(this.playerDetails.turn);\n                if (player.turn) {\n                    let turno = document.getElementById('turno');\n                    turno.innerHTML = \"Turno de \" + player.user_id;\n                }\n            });\n            console.log(\"delay\");\n            this.mostrarPosiciones();\n            await this.delay(1000);\n            this.mostrarDatosPartida();\n        });\n    }\n    mostrarPosiciones() {\n        for (let i = 0; i <= 27; i++) {\n            let box = document.getElementById('ficha' + i);\n            box.innerHTML = \"\";\n        }\n        this.game.players_details.forEach(player_details => {\n            let box = document.getElementById('ficha' + player_details.position);\n            box.innerHTML += '<div id=\"token' + player_details.player_number + '\"></div>';\n        });\n    }\n    tirarDados() {\n        this.playerDetails.turn = false;\n        let dados = document.getElementById('dado');\n        dados.style.display = \"inline\";\n        this.gameService.movePlayer(this.playerDetails).subscribe(response => {\n            dados.innerHTML = \"\";\n            this.openDialog(response);\n        });\n    }\n    openDialog(property) {\n        this.dialog.open(DialogComponent, {\n            data: {\n                property: property,\n                playerDetails: this.playerDetails\n            },\n            width: '60%',\n            height: '80%'\n        });\n    }\n    delay(ms) {\n        return new Promise(resolve => setTimeout(resolve, ms));\n    }\n};\nBoardComponent = __decorate([\n    Component({\n        selector: 'app-board',\n        templateUrl: './board.component.html',\n        styleUrls: ['./board.component.sass', './box.component.sass'],\n        encapsulation: ViewEncapsulation.None\n    })\n], BoardComponent);\nexport { BoardComponent };\n"]},"metadata":{},"sourceType":"module"}